//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 15.0.27703.1
// 
namespace Mobile.ServicioAutenticacion {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DatosLogin", Namespace="http://schemas.datacontract.org/2004/07/RECEPTIO.CapaAplicacion.Console.Aplicacio" +
        "n.Contratos")]
    public partial class DatosLogin : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool EsLiderField;
        
        private bool EstaAutenticadoField;
        
        private long IdSesionField;
        
        private int IdUsuarioField;
        
        private string MensajeField;
        
        private string ZonaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EsLider {
            get {
                return this.EsLiderField;
            }
            set {
                if ((this.EsLiderField.Equals(value) != true)) {
                    this.EsLiderField = value;
                    this.RaisePropertyChanged("EsLider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EstaAutenticado {
            get {
                return this.EstaAutenticadoField;
            }
            set {
                if ((this.EstaAutenticadoField.Equals(value) != true)) {
                    this.EstaAutenticadoField = value;
                    this.RaisePropertyChanged("EstaAutenticado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdSesion {
            get {
                return this.IdSesionField;
            }
            set {
                if ((this.IdSesionField.Equals(value) != true)) {
                    this.IdSesionField = value;
                    this.RaisePropertyChanged("IdSesion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUsuario {
            get {
                return this.IdUsuarioField;
            }
            set {
                if ((this.IdUsuarioField.Equals(value) != true)) {
                    this.IdUsuarioField = value;
                    this.RaisePropertyChanged("IdUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mensaje {
            get {
                return this.MensajeField;
            }
            set {
                if ((object.ReferenceEquals(this.MensajeField, value) != true)) {
                    this.MensajeField = value;
                    this.RaisePropertyChanged("Mensaje");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zona {
            get {
                return this.ZonaField;
            }
            set {
                if ((object.ReferenceEquals(this.ZonaField, value) != true)) {
                    this.ZonaField = value;
                    this.RaisePropertyChanged("Zona");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioAutenticacion.IServicioLoginMobile")]
    public interface IServicioLoginMobile {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/Autenticar", ReplyAction="http://tempuri.org/ILogin/AutenticarResponse")]
        System.Threading.Tasks.Task<Mobile.ServicioAutenticacion.DatosLogin> AutenticarAsync(string usuario, string contrasena, string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/CerrarSesion", ReplyAction="http://tempuri.org/ILogin/CerrarSesionResponse")]
        System.Threading.Tasks.Task CerrarSesionAsync(long idSesion);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioLoginMobileChannel : Mobile.ServicioAutenticacion.IServicioLoginMobile, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioLoginMobileClient : System.ServiceModel.ClientBase<Mobile.ServicioAutenticacion.IServicioLoginMobile>, Mobile.ServicioAutenticacion.IServicioLoginMobile {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServicioLoginMobileClient() : 
                base(ServicioLoginMobileClient.GetDefaultBinding(), ServicioLoginMobileClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IServicioLoginMobile.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioLoginMobileClient(EndpointConfiguration endpointConfiguration) : 
                base(ServicioLoginMobileClient.GetBindingForEndpoint(endpointConfiguration), ServicioLoginMobileClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioLoginMobileClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServicioLoginMobileClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioLoginMobileClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServicioLoginMobileClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioLoginMobileClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<Mobile.ServicioAutenticacion.DatosLogin> AutenticarAsync(string usuario, string contrasena, string ip) {
            return base.Channel.AutenticarAsync(usuario, contrasena, ip);
        }
        
        public System.Threading.Tasks.Task CerrarSesionAsync(long idSesion) {
            return base.Channel.CerrarSesionAsync(idSesion);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServicioLoginMobile)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServicioLoginMobile)) {
                return new System.ServiceModel.EndpointAddress("http://cgint04:50502/WS_RECEPTIOConsole/ServicioLoginMobile.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return ServicioLoginMobileClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IServicioLoginMobile);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return ServicioLoginMobileClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IServicioLoginMobile);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IServicioLoginMobile,
        }
    }
}
